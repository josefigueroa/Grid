form_focus=function(){var e=$('input[type="text"]'),n=$(this).attr("placeholder");e.each(function(){var e=($('input[type="text"]'),$(this).attr("placeholder"));$(this).val().length>0||void 0!==e?$(this).siblings(".label-label").addClass("floating-label"):$(this).siblings(".label-label").removeClass("floating-label")}),e.on("change",function(){0!==$(this).val().length||void 0!==n?$(this).siblings(".label-label").addClass("floating-label"):$(this).siblings(".label-label").removeClass("floating-label")}),e.on("focusin",function(){$(this).val().length>=0||void 0!==n?$(this).siblings(".label-label").addClass("floating-label"):$(this).siblings(".label-label").removeClass("floating-label")}),e.on("focusout",function(){0!==$(this).val().length?$(this).siblings(".label-label").addClass("floating-label"):void 0!==$(this).attr("placeholder")?$(this).siblings(".label-label").addClass("floating-label"):$(this).siblings(".label-label").removeClass("floating-label")})},form_focus(),header=function(){header_scroll=function(){$(window).scroll(function(){var e=$(window).scrollTop();e<this.beforeTop?$("header").slideDown(300):$("header").slideUp(300),this.beforeTop=e})},activeMenu=function(){$("header li").on("click",function(){$("header li").removeClass("active"),$(this).addClass("active")})},header_dropdown=function(){$("header a").click(function(){$(this).siblings(".dropdownMenu").slideToggle(300)}).on("focusout",function(){$(this).siblings(".dropdownMenu").fadeOut(300)}),$(document).keyup(function(e){27===e.keyCode&&$(".enlaces a").siblings(".dropdownMenu").hide()})},header_slideMenu=function(){var e=$(".enlaces"),n=$("body"),o=$(".nav-icon, #btn-menu"),t=$(".sideNav");o.on("click",function(n){e.toggleClass("open"),t.addClass("side-overlay"),$("body").css("overflow","hidden"),o.addClass("icon-active")}),t.click(function(){e.removeClass("open"),t.removeClass("side-overlay"),n.removeAttr("style"),o.removeClass("icon-active")})},header_scroll(),header_dropdown(),activeMenu(),header_slideMenu()},header(),init=function(){dropdownMenu(".header__nav__menuHeader__listItem__enlace"),scrollToTop(".scrollTop"),activeMenu(".header__nav__menuHeader__listItem"),acordeon(".acordeon-title",".acordeon-paragraph"),llamadaAjax(".li-item"),pegamento(".contentfixed")},headerFixed=function(e){var n="header_fixed";$(window).on("scroll",function(){$(window).scrollTop()>30?$(e).addClass(n):$(e).removeClass(n)})},pegamento=function(e){$(window).scroll(function(){var n=$(window).scrollTop();n>30?$(e).addClass("fixed"):$(e).removeClass("fixed")})},seguimiento=function(e,n){$(e).on("scrollSpy:enter",function(){var e="#"+$(this).attr("id");$(n).each(function(){var o=$(this).children("a"),t=o.attr("href");e==t&&($(n).removeClass("active"),$(this).addClass("active"))})}),$(e).on("scrollSpy:exit",function(){var e="#"+$(this).attr("id");$(n).each(function(){var n=$(this).children("a"),o=n.attr("href");e==o&&$(this).removeClass("active")})}),$(e).scrollSpy()},dropdownMenu=function(e){$(".header__nav__menuHeader__listItem__enlace");$(e).click(function(){$(this).siblings(".dropdownMenu").slideToggle(300)}).on("focusout",function(){$(this).siblings(".dropdownMenu").fadeOut(300)})},slideMenu=function(e,n){$(e).on("click",function(e){var n=$(".enlaces");$("body");n.toggleClass("open")}),$(n).on("click",function(){var e=$("#btn-menu");e.removeClass("open"),$("body").css({"padding-left":"0",transition:"all 0.3s"}),$('<div class="overlay"></div>').detach()})},scrollToTop=function(e){$(window).on("scroll",function(){$(window).scrollTop()>80?$(e).slideDown():$(e).slideUp()}),$(e).click(function(){$("body").animate({scrollTop:0},400)})},activeMenu=function(e){$(e).on("click",function(){$(e).removeClass("active"),$(this).addClass("active")})},acordeon=function(e,n){$(e).click(function(){$(this).siblings(n).slideToggle(100),$(this).parent().siblings().find(n).slideUp(),$(this).children().toggleClass("fa-chevron-down fa-chevron-up"),$(this).parent().siblings().find("i").removeClass("fa-chevron-up").addClass("fa-chevron-down")})},llamadaAjax=function(e){$(e).on("click",function(e){var n=$(this).data("href");$.ajax({url:n+".html",async:!0,dataType:"html",success:function(e){$(".content_container").html(e)},error:function(e){$(".content_container").html("<h4>Lo sentimos, se produjo un error</h4>")}})})},$(document).ready(function(){init()}),function(e){e.fn.pluginName=function(n){var o={foo:"bar"},t={},i={init:function(n){return this.each(function(){t=e.extend({},o,n);e(this)})},foo_public_method:function(){}};return i[n]?i[n].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof n&&n?void e.error('Method "'+n+'" does not exist in pluginName plugin!'):i.init.apply(this,arguments)}}(jQuery),function(e){function n(n,o,t,i){var l=e();return e.each(a,function(e,a){var s=a.offset().top,r=a.offset().left,c=r+a.width(),d=s+a.height(),u=!(r>o||c<i||s>t||d<n);u&&l.push(a)}),l}function o(){++c;var o=l.scrollTop(),t=l.scrollLeft(),i=t+l.width(),a=o+l.height(),r=n(o+d.top,i+d.right,a+d.bottom,t+d.left);e.each(r,function(e,n){var o=n.data("scrollSpy:ticks");"number"!=typeof o&&n.triggerHandler("scrollSpy:enter"),n.data("scrollSpy:ticks",c)}),e.each(s,function(e,n){var o=n.data("scrollSpy:ticks");"number"==typeof o&&o!==c&&(n.triggerHandler("scrollSpy:exit"),n.data("scrollSpy:ticks",null))}),s=r}function t(){l.trigger("scrollSpy:winSize")}function i(e,n,o){var t,i,l,a=null,s=0;o||(o={});var r=function(){s=o.leading===!1?0:u(),a=null,l=e.apply(t,i),t=i=null};return function(){var c=u();s||o.leading!==!1||(s=c);var d=n-(c-s);return t=this,i=arguments,d<=0?(clearTimeout(a),a=null,s=c,l=e.apply(t,i),t=i=null):a||o.trailing===!1||(a=setTimeout(r,d)),l}}var l=e(window),a=[],s=[],r=!1,c=0,d={top:0,right:0,bottom:0,left:0},u=Date.now||function(){return(new Date).getTime()};e.scrollSpy=function(n,t){n=e(n),n.each(function(n,o){a.push(e(o))}),t=t||{throttle:100},d.top=t.offsetTop||0,d.right=t.offsetRight||0,d.bottom=t.offsetBottom||0,d.left=t.offsetLeft||0;var s=i(o,t.throttle||100),c=function(){e(document).ready(s)};return r||(l.on("scroll",c),l.on("resize",c),r=!0),setTimeout(c,0),n},e.winSizeSpy=function(n){return e.winSizeSpy=function(){return l},n=n||{throttle:100},l.on("resize",i(t,n.throttle||100))},e.fn.scrollSpy=function(n){return e.scrollSpy(e(this),n)}}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
